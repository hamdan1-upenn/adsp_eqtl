Sender: LSF System <lsfadmin@node205.hpc.local>
Subject: Job 91892585: <bash run_eqtl_chr19.sh "Excitatory Neuron"> in cluster <pennhpc> Exited

Job <bash run_eqtl_chr19.sh "Excitatory Neuron"> was submitted from host <node158.hpc.local> by user <hamdan1> in cluster <pennhpc> at Wed May 21 15:50:18 2025
Job was executed on host(s) <node205.hpc.local>, in queue <normal>, as user <hamdan1> in cluster <pennhpc> at Wed May 21 15:50:19 2025
</home/hamdan1> was used as the home directory.
</project/guomiclab/hamdanz_projects/adsp_r4_rosmap> was used as the working directory.
Started at Wed May 21 15:50:19 2025
Terminated at Thu May 22 11:07:31 2025
Results reported at Thu May 22 11:07:31 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
bash run_eqtl_chr19.sh "Excitatory Neuron"
------------------------------------------------------------

TERM_MEMLIMIT: job killed after reaching LSF memory usage limit.
Exited with exit code 137.

Resource usage summary:

    CPU time :                                   69249.26 sec.
    Max Memory :                                 180000 MB
    Average Memory :                             110500.55 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   2 MB
    Max Processes :                              5
    Max Threads :                                6
    Run time :                                   69421 sec.
    Turnaround time :                            69433 sec.

The output (if any) follows:

/project/guomiclab/hamdanz_projects/adsp_r4_rosmap/src/helper_functions.py:72: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  gtf = pd.read_csv(GTF_PATH, sep='\t', header= None, comment = '#')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
run_eqtl_chr19.sh: line 17: 270032 Killed                  python src/run_eqtl.py -s data/adsp_r4_rosmap/chr19.rosmap.r4.wgs.biallelic.genotypes.mac10.corrected.txt.gz -a data/rnaseq/rosmap_raw_rnaseq_labeled.h5ad -v data/metadata/ROSMAP_covariates.csv -k subject_key --celltype-column major_cell_type -c "$cell" -o "/project/guomiclab/hamdanz_projects/adsp_r4_rosmap/output/parallel_job_runs/${cell}_chr19_44844779_45044779_rosmap_adsp.csv" --snp-range chr19_44844779_45044779 --gene-range chr19_44444779_45444779
