Sender: LSF System <lsfadmin@node169.hpc.local>
Subject: Job 91986701: <bash run_eqtl_chr2.sh "Peripheral Blood"> in cluster <pennhpc> Done

Job <bash run_eqtl_chr2.sh "Peripheral Blood"> was submitted from host <hpclogin1> by user <hamdan1> in cluster <pennhpc> at Tue May 27 09:25:05 2025
Job was executed on host(s) <node169.hpc.local>, in queue <normal>, as user <hamdan1> in cluster <pennhpc> at Tue May 27 09:25:06 2025
</home/hamdan1> was used as the home directory.
</project/guomiclab/hamdanz_projects/adsp_r4_rosmap> was used as the working directory.
Started at Tue May 27 09:25:06 2025
Terminated at Tue May 27 13:13:42 2025
Results reported at Tue May 27 13:13:42 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
bash run_eqtl_chr2.sh "Peripheral Blood"
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   13606.19 sec.
    Max Memory :                                 78828 MB
    Average Memory :                             76436.78 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   2 MB
    Max Processes :                              38
    Max Threads :                                74
    Run time :                                   13711 sec.
    Turnaround time :                            13717 sec.

The output (if any) follows:

/project/guomiclab/hamdanz_projects/adsp_r4_rosmap/src/helper_functions.py:72: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.
  gtf = pd.read_csv(GTF_PATH, sep='\t', header= None, comment = '#')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
/project/guomiclab/hamdanz_projects/adsp_r4_rosmap/data/adsp_r4_rosmap/chr2.rosmap.r4.wgs.biallelic.genotypes.mac10.corrected.txt.gz exists! continuing...
data/rnaseq/rosmap_raw_rnaseq_labeled.h5ad exists! continuing...
data/metadata/ROSMAP_covariates.csv exists! continuing...
Importing Packages...
Packages finished importing
Found 770 matching SNP IDs in the SNP dataframe
READING IN RNA-SEQ DATA...
FINISHED READING RNA-SEQ DATA
Column name subject_key found in dataframe. Continuing...
Column name major_cell_type found in dataframe. Continuing...
Found Peripheral Blood in the adata object
BUILDING GTF REFERENCE DATAFRAME...
FINISHED BUILDING GTF REFERENCE DATAFRAME
blocksize 10
working on block 0
6
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:  1.1min finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   40.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   40.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   39.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   39.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   20.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   11.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   13.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   13.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/estimator.py:94: RankWarning: Polyfit may be poorly conditioned
  poly = np.polyfit(m, v, 2)
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   12.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:   10.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    9.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    8.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    7.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.6s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.5s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    6.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.8s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.7s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.4s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.3s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.2s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    4.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    4.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    4.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/hypothesis_test.py:250: RuntimeWarning: invalid value encountered in divide
  beta = np.einsum('ijk,ij->jk', A_mA * sample_weight[:, :, np.newaxis], B_mB).T/sample_weight.sum(axis=0) / ssA.T
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:479: RuntimeWarning: Mean of empty slice.
  loc = data.mean()
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/_core/_methods.py:138: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/scipy/stats/_continuous_distns.py:484: RuntimeWarning: Mean of empty slice.
  scale = np.sqrt(((data - loc)**2).mean())
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py:2035: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    4.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    4.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    4.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    4.9s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.0s finished
/home/hamdan1/.conda/envs/scanp/lib/python3.12/site-packages/memento/main.py:181: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  df[col] = pd.to_numeric(df[col], errors='ignore')
[Parallel(n_jobs=32)]: Using backend LokyBackend with 32 concurrent workers.
[Parallel(n_jobs=32)]: Done   6 out of   6 | elapsed:    5.1s finished
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
blocksize 10
working on block 0
6
